int findKRotation(int arr[], int n) {
	    int start = 0, end = n-1;
	    
	    while(start <= end){
	        if(arr[start] <= arr[end]){
	            return start;
	        }
	        
	        int mid = start + (end-start);
	        
	        // Check if mid is the minimum element
	        int next = (mid+1)%n;
	        int prev = (mid+n-1)%n;
	        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){
	            return mid;
	        }
	        
	        // Decide whether to go left or right
	        if(arr[start] <= arr[mid]){
	            start = mid+1;
	        }
	        else{
	            end = mid-1;
	        }
	    }
	    
	    return -1;  // This is just because return type is int
	    
	}
